import org.ajoberstar.grgit.Grgit
import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.ajoberstar:grgit:1.1.0'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

ext {
    head = Grgit.open(".").head()

    forgeVsn = "1.12-14.21.1.2387"
    if (System.getenv("FORGE_VERSION") != null) {
            forgeVsn = System.getenv("FORGE_VERSION")
    }
    mcVsn = forgeVsn.split("-", 2)[0]
}

group = "com.tealnerd"
archivesBaseName = "CivRadar-" + mcVsn
version = "2.1.0"

if (!head.shortMessage.matches("[Rr]elease v$version.*")) {
    version = "${version}-pre-git-${head.abbreviatedId}+forge-$forgeVsn"
    if (System.getenv("TRAVIS_BUILD_NUMBER") != null) {
        version = String.format("%s-build-%s", version, System.getenv("TRAVIS_BUILD_NUMBER"))
    }
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = forgeVsn
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20170624"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replaceIn "com/biggestnerd/civradar/CivRadar.java"
    replace "@VERSION@", project.version
    replace "@BUILD_TIME@", buildTime
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "forgeVsn", project.forgeVsn

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand(['version':project.version, 'mcversion':project.mcVsn, 'forgeVsn':project.forgeVsn,])
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def getBuildTime() {
    def date = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss z")
    date.setTimeZone(TimeZone.getTimeZone("UTC"))
    return date.format(new Date())
}